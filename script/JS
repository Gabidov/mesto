// const validationConfig = {
//   formSelector: ".popup__form",
//   inputSelector: ".popup__input",
//   submitButtonSelector: ".popup__button-save",
//   inactiveButtonClass: "popup__submit-button_invalid",
//   activeButtonClass: "popup__submit-button_valid",
//   inputErrorClass: "popup__input_type_error",
//   errorClass: "popup__error_visible",
// };
// // Подготовка формы
// const enableValidation = ({ formSelector, ...rest }) => {
//   const forms = Array.from(document.querySelectorAll(formSelector));
//   forms.forEach((form) => {
//     form.addEventListener("submit", (evt) => {
//       evt.preventDefault();
//     });
//     setEventListeners(form, rest);
//   });
// };
// // Навешиваем слушатели инпутам
// const setEventListeners = (
//   formToValidate,
//   { inputSelector, submitButtonSelector, ...rest }
// ) => {
//   const formInputs = Array.from(formToValidate.querySelectorAll(inputSelector));
//   const formButton = formToValidate.querySelector(submitButtonSelector);
//   formInputs.forEach((input) => {
//     disableButton(formButton, rest);
//     input.addEventListener("input", () => {
//       checkInputValidity(input, rest);
//       if (hasInvalidInput(formInputs)) {
//         disableButton(formButton, rest);
//       } else {
//         enableButton(formButton, rest);
//       }
//     });
//   });
// };
// const showErrorMessage = function (
//   currentInputErrorContainer,
//   input,
//   { inputErrorClass, errorClass }
// ) {
//   currentInputErrorContainer.classList.add(errorClass);
//   currentInputErrorContainer.textContent = input.validationMessage;
//   input.classList.add(inputErrorClass);
// };
// const hideErrorMessage = function (
//   currentInputErrorContainer,
//   input,
//   { inputErrorClass, errorClass }
// ) {
//   currentInputErrorContainer.classList.remove(errorClass);
//   currentInputErrorContainer.textContent = "";
//   input.classList.remove(inputErrorClass);
// };
// // Проверка валидности инпутов
// const checkInputValidity = (input, rest) => {
//   const currentInputWrapper = input.parentElement;
//   const currentInputErrorContainer = currentInputWrapper.querySelector(
//     `#${input.id}-error`
//   );
//   if (input.checkValidity()) {
//     hideErrorMessage(currentInputErrorContainer, input, rest);
//   } else {
//     showErrorMessage(currentInputErrorContainer, input, rest);
//   }
// };
// const hasInvalidInput = (formInputs) => {
//   return formInputs.some((item) => !item.validity.valid);
// };
// // Активная/неактивная кнопка
// const enableButton = (button, { inactiveButtonClass, activeButtonClass }) => {
//   button.classList.remove(inactiveButtonClass);
//   button.classList.add(activeButtonClass);
//   button.removeAttribute("disabled", "disabled");
// };
// const disableButton = (button, { inactiveButtonClass, activeButtonClass }) => {
//   button.classList.add(inactiveButtonClass);
//   button.classList.remove(activeButtonClass);
//   button.setAttribute("disabled", "disabled");
// };
// enableValidation(validationConfig);

// ////////// 

// function enableValidation(object) {
//   const forms = Array.from(object.allforms) // создал массив из объекта //
//   forms.forEach((form) => {
//       const inputList = form.querySelectorAll(object.inputSelector);
//       const button = form.querySelector(object.submitButtonSelector);
//       handEventListnear(inputList, button, object.selectorTemplate,  object.disableButtonSelector, object.inputErrorClass, object.textErrorClass);
//   });
// }

// function handEventListnear(inputList, button, selectorTemplate,  disableButtonSelector, inputErrorClass, textErrorClass) {
//   inputList.forEach((input) => {
//       input.addEventListener('input', () => {
//           checkInputValidation(input, selectorTemplate, inputErrorClass, textErrorClass);
//           // toogleButton(button, input, disableButtonSelector);
//       })
//   })
// }

// function checkInputValidation(input, selectorTemplate, inputErrorClass, textErrorClass) {
//   const errorText = document.querySelector(`${selectorTemplate}${input.name}`);
//   input.validity.valid ? hideInputError(input, errorText, inputErrorClass, textErrorClass) : showInputError();
// }

// function hideInputError() {
//   input.classList.remove(inputErrorClass);
//   errorText.textContent = '';
//   errorText.classList.remove(textErrorClass);
// }

// function showInputError() {
//   input.classList.add(inputErrorClass);
//   errorText.textContent = input.validationMessage;
//   errorText.classList.add(textErrorClass);
// }